name: Laravel Testing

on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master, dev ]

jobs:
  dusk-tests:
    name: Laravel Testing
    runs-on: ubuntu-latest
    
    services:
      # If your application uses MySQL
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: finance_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@2.33.0
      with:
        php-version: '8.3'
        extensions: mbstring, dom, fileinfo, mysql, pdo, pdo_mysql
        tools: composer:v2
        coverage: xdebug
    
    - name: Copy .env
      run: cp .env.example .env
    
    - name: Install Composer Dependencies
      run: composer install --no-interaction --prefer-dist --optimize-autoloader
    
    - name: Generate key
      run: php artisan key:generate
    
    - name: Copy .env.dusk
      run: |
        cp .env.dusk .env.dusk.local
        echo "SESSION_DRIVER=array" >> .env.dusk.local
        echo "CI=true" >> .env.dusk.local
    
    - name: Generate dusk key
      run: php artisan key:generate --env=dusk
    
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install npm dependencies
      run: npm ci || npm install
    
    - name: Build assets
      run: npm run build
    
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache database
    
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database_dusk.sqlite
        chmod 777 database/database_dusk.sqlite
    
    - name: Run Migrations with seed
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database_dusk.sqlite
      run: php artisan migrate:fresh --seed --env=dusk

    - name: Execute PHPUnit tests (Unit and Feature tests)
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: finance_test
        DB_USERNAME: root
        DB_PASSWORD: 
      run: vendor/bin/phpunit
      
    - name: Run PHPStan
      run: vendor/bin/phpstan analyze app --level=5 || true
    
    - name: Upgrade Chrome Driver
      run: php artisan dusk:chrome-driver --detect
    
    - name: Start Chrome Driver
      run: ./vendor/laravel/dusk/bin/chromedriver-linux &
      
    - name: Wait for Chrome Driver
      run: sleep 5
    
    - name: Start Laravel Server for Dusk
      run: |
        # Start server using .env.dusk.local
        php -d variables_order=EGPCS -S 127.0.0.1:8000 -t public &
        # Wait for server to start
        sleep 5
        # Check if server is responding
        curl -s -I http://127.0.0.1:8000 || echo "Server not responding yet"
        sleep 5
      env:
        APP_ENV: dusk
        APP_URL: "http://127.0.0.1:8000"
    
    - name: Run Dusk Tests
      env:
        APP_ENV: dusk
        APP_URL: "http://127.0.0.1:8000"
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database_dusk.sqlite
        CI: true
      run: |
        # Show server output for debugging
        curl -s http://127.0.0.1:8000 > /tmp/homepage.html
        echo "Homepage Content Length: $(wc -l < /tmp/homepage.html)"
        
        # Run tests with increased memory
        php -d memory_limit=512M artisan dusk --verbose
    
    - name: Capture logs on failure
      if: failure()
      run: |
        echo "===== Laravel Logs ====="
        tail -n 100 storage/logs/laravel*.log || true
        
        # Dump database content for debugging
        echo "===== Database Content ====="
        php artisan tinker --execute="DB::connection('sqlite')->table('users')->get();" || true
        
        # Check if server is still running
        echo "===== Server Status ====="
        curl -v http://127.0.0.1:8000 || true
    
    - name: Upload Screenshots
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: screenshots
        path: tests/Browser/screenshots
    
    - name: Upload Console Logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: console-logs
        path: tests/Browser/console
