name: Generate and Publish PHPDoc to Wiki

on:
  push:
    branches:
      - master # Or your default branch, e.g., main

permissions:
  contents: write # Needed to checkout code and push to the wiki

jobs:
  generate-and-publish-wiki:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2' # Ensure this matches your project's requirement
          extensions: dom, mbstring, xml, zip # Common extensions for phpDocumentor
          tools: composer # If your phpdoc has composer dependencies (optional)

      - name: Download phpDocumentor
        run: |
          wget -q https://phpdoc.org/phpDocumentor.phar -O phpDocumentor.phar
          chmod +x phpDocumentor.phar
          ./phpDocumentor.phar --version # Verify download

      - name: Generate PHPDoc documentation
        # This assumes phpdoc.xml is at the root and configured to output to ./wiki/api
        # Also assumes your templates are in .github/markdown/ as per phpdoc.xml
        run: ./phpDocumentor.phar run -c phpdoc.xml

      - name: Checkout wiki repository
        run: |
          git clone https://github-actions:${{ secrets.GITHUB_TOKEN }}@github.com/dodwmd/finance-app.wiki.git wiki_repo
          cd wiki_repo
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          cd ..

      - name: Update wiki content
        run: |
          echo "Updating wiki content..."
          cd wiki_repo
          echo "Current directory: $(pwd)"
          echo "Listing files before cleanup (root of wiki_repo):"
          ls -A

          # Remove all existing files and directories from the wiki_repo, except for .git.
          # This ensures that files deleted from the source ./wiki directory in the main repo
          # are also removed from the wiki.
          echo "Cleaning wiki_repo (except .git)..."
          find . -maxdepth 1 -mindepth 1 ! -name '.git' -exec rm -rf {} \;
          echo "Listing files after cleanup (should only be .git if anything):"
          ls -A

          # The source wiki content is in ../wiki/ relative to this wiki_repo directory.
          # (i.e., the 'wiki' directory from the main repository checkout)
          SOURCE_WIKI_DIR="../wiki"

          if [ -d "$SOURCE_WIKI_DIR" ]; then
            echo "Copying all content from $SOURCE_WIKI_DIR to ."
            # Copy all contents (including hidden files if any, like .nojekyll)
            # from the main repo's local ./wiki directory to the root of the wiki_repo.
            # cp -a preserves attributes and copies recursively.
            # Using "$SOURCE_WIKI_DIR/." copies the contents of the directory.
            cp -a "$SOURCE_WIKI_DIR/." .
            echo "Listing files in wiki_repo after copy:"
            ls -A
          else
            echo "Source directory $SOURCE_WIKI_DIR does not exist. No content to copy."
          fi
          
          cd ..
          echo "Finished updating wiki content. Current directory: $(pwd)"

      - name: Commit and push to wiki
        run: |
          cd wiki_repo
          # Check if there are any changes to commit
          if ! git diff --quiet || ! git diff --staged --quiet; then
            git add .
            git commit -m "Update wiki content (docs and pages) from commit ${{ github.sha }}"
            git push
            echo "Documentation pushed to wiki."
          else
            echo "No changes to commit to the wiki."
          fi
          cd ..
